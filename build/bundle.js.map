{"version":3,"file":"bundle.js","sourceRoot":"","sources":["../Cube.ts","../Room.ts","../Main.ts"],"names":[],"mappings":"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","sourcesContent":["import {Room} from \"./Room\";\nimport {Autowired} from \"./Autowired\";\nexport class Cube {\n    autowired: Autowired;\n    threeCube: THREE.Mesh;\n    physicsBody: CANNON.Body;\n\n    constructor(autowired: Autowired) {\n        this.autowired = autowired;\n\n        let width: number = (Math.random() * 0.3 + 0.2);\n        let height: number = (Math.random() * 0.3 + 0.2);\n        let depth: number = (Math.random() * 0.3 + 0.2);\n        this.threeCube = this.createCubeThree(width, height, depth);\n        this.physicsBody = this.createCubePhysics(width, height, depth);\n\n        this.autowired.scene.add(this.threeCube);\n        this.autowired.world.addBody(this.physicsBody);\n    }\n\n    createCubeThree(width: number, height: number, depth: number): THREE.Mesh {\n        let geometry = new THREE.BoxGeometry(width, height, depth);\n        let material = new THREE.MeshPhongMaterial({\n            color: 0x839CA5,\n            specular: 0xFFFFFF,\n            shininess: 200\n        });\n        let mesh: THREE.Mesh = new THREE.Mesh(geometry, material);\n        mesh.receiveShadow = true;\n        return mesh;\n    }\n\n    createCubePhysics(width: number, height: number, depth: number): CANNON.Body {\n        let x: number = (Math.random() - 0.5) * Room.blockSize;\n        let z: number = (Math.random() - 0.5) * Room.blockSize;\n        let density: number = 15.0;\n        let mass: number = width * height * depth * density;\n        let sphereBody = new CANNON.Body({\n            mass: mass,\n            position: new CANNON.Vec3(x, Room.blockSize / 2 - 1 - height, z),\n            shape: new CANNON.Box(new CANNON.Vec3(width / 2, height / 2, depth / 2)),\n            material: this.autowired.myMaterials.cubeMaterial,\n            linearDamping: 0.3,\n            angularDamping: 0.6\n        });\n        return sphereBody;\n    }\n\n    update(cubeOrder: CubeOrder, delta: number) {\n        let direction: CANNON.Vec3;\n        if (cubeOrder == CubeOrder.randomDirection) {\n            direction = new CANNON.Vec3(Math.random(), Math.random(), Math.random()).unit();\n        } else if (cubeOrder == CubeOrder.hitPlayer) {\n            direction = this.autowired.firstPersonControls.physics.position.clone().vsub(this.physicsBody.position).unit();\n        } else if (cubeOrder == CubeOrder.posX) {\n            direction = new CANNON.Vec3(1, 0, 0).unit();\n        } else if (cubeOrder == CubeOrder.negX) {\n            direction = new CANNON.Vec3(-1, 0, 0).unit();\n        } else if (cubeOrder == CubeOrder.posZ) {\n            direction = new CANNON.Vec3(0, 0, 1).unit();\n        } else if (cubeOrder == CubeOrder.negZ) {\n            direction = new CANNON.Vec3(0, 0, -1).unit();\n        }\n        this.physicsBody.applyImpulse(direction.scale(0.025 * delta), new CANNON.Vec3());\n        Util.copyPhysicsTo(this.physicsBody, this.threeCube);\n    }\n\n    destroy() {\n        this.autowired.scene.remove(this.threeCube);\n        this.autowired.world.remove(this.physicsBody);\n    }\n}","/// <reference path=\"definitions/three.d.ts\" />\nimport {Autowired} from \"./Autowired\";\n\nexport class Room {\n    static blockSize: number = 10;\n\n    autowired: Autowired;\n\n    bottomMesh: THREE.Mesh;\n    topMesh: THREE.Mesh;\n    leftMesh: THREE.Mesh;\n    rightMesh: THREE.Mesh;\n    forwardMesh: THREE.Mesh;\n    backwardMesh: THREE.Mesh;\n\n    bottomPhysics: CANNON.Body;\n    topPhysics: CANNON.Body;\n    leftPhysics: CANNON.Body;\n    rightPhysics: CANNON.Body;\n    forwardPhysics: CANNON.Body;\n    backwardPhysics: CANNON.Body;\n\n    constructor(autowired: Autowired) {\n        this.autowired = autowired;\n\n        this.bottomMesh = this.createCubeThreeFloor();\n        this.topMesh = this.createCubeThree();\n        this.leftMesh = this.createCubeThree();\n        this.rightMesh = this.createCubeThree();\n        this.forwardMesh = this.createCubeThree();\n        this.backwardMesh = this.createCubeThree();\n\n        this.bottomPhysics = this.createCubePhysics();\n        this.topPhysics = this.createCubePhysics();\n        this.leftPhysics = this.createCubePhysics();\n        this.rightPhysics = this.createCubePhysics();\n        this.forwardPhysics = this.createCubePhysics();\n        this.backwardPhysics = this.createCubePhysics();\n\n        this.bottomPhysics.position.set(0, -Room.blockSize, 0);\n        this.topPhysics.position.set(0, Room.blockSize, 0);\n        this.leftPhysics.position.set(Room.blockSize, 0, 0);\n        this.rightPhysics.position.set(-Room.blockSize, 0, 0);\n        this.forwardPhysics.position.set(0, 0, Room.blockSize);\n        this.backwardPhysics.position.set(0, 0, -Room.blockSize);\n\n        for (let mesh of this.meshes()) {\n            this.autowired.scene.add(mesh)\n        }\n        for (let physicBody of this.physics()) {\n            this.autowired.world.addBody(physicBody)\n        }\n    }\n\n    createCubeThree(width = Room.blockSize, height = Room.blockSize, depth = Room.blockSize) {\n        let geometry = new THREE.BoxGeometry(width, height, depth);\n        let material = new THREE.MeshStandardMaterial(\n            {\n                color: \"blue\"\n            }\n        );\n        let mesh: THREE.Mesh = new THREE.Mesh(geometry, material);\n        return mesh;\n    }\n\n    createCubeThreeFloor(width = Room.blockSize, height = Room.blockSize, depth = Room.blockSize) {\n        let geometry = new THREE.BoxGeometry(width, height, depth);\n        let material = new THREE.MeshBasicMaterial(\n            {\n                color: \"gray\"\n            }\n        );\n        let mesh: THREE.Mesh = new THREE.Mesh(geometry, material);\n        return mesh;\n    }\n\n    createCubePhysics(width = Room.blockSize, height = Room.blockSize, depth = Room.blockSize): CANNON.Body {\n        let sphereBody = new CANNON.Body({\n            mass: 0,\n            shape: new CANNON.Box(new CANNON.Vec3(width / 2, height / 2, depth / 2)),\n            material: this.autowired.myMaterials.slipperyMaterial\n        });\n        return sphereBody;\n    }\n\n    update() {\n        Util.copyPhysicsTo(this.bottomPhysics, this.bottomMesh);\n        Util.copyPhysicsTo(this.topPhysics, this.topMesh);\n        Util.copyPhysicsTo(this.leftPhysics, this.leftMesh);\n        Util.copyPhysicsTo(this.rightPhysics, this.rightMesh);\n        Util.copyPhysicsTo(this.forwardPhysics, this.forwardMesh);\n        Util.copyPhysicsTo(this.backwardPhysics, this.backwardMesh);\n    }\n\n    meshes(): THREE.Mesh[] {\n        return [this.bottomMesh, this.topMesh, this.leftMesh, this.rightMesh, this.forwardMesh, this.backwardMesh];\n    }\n\n    physics(): CANNON.Body[] {\n        return [this.bottomPhysics, this.topPhysics, this.leftPhysics, this.rightPhysics, this.forwardPhysics, this.backwardPhysics];\n    }\n}","/// <reference path=\"Cube.ts\" />\n/// <reference path=\"Room.ts\" />\n/// <reference path=\"definitions/cannon.d.ts\" />\n\nimport ShadowMapType = THREE.ShadowMapType;\nimport PCFSoftShadowMap = THREE.PCFSoftShadowMap;\n//import {Autowired} from \"./Autowired\";\n//import {Scoreboard} from \"./Scoreboard\";\n\nclass Main {\n    camera: THREE.Camera;\n    scene: THREE.Scene;\n    renderer: THREE.WebGLRenderer;\n    glowScene: THREE.Scene;\n\n    canvasElement: JQuery;\n\n\n    constructor() {\n        let VIEW_ANGLE = 75;\n        let NEAR = 0.1;\n        let FAR = 100;\n        \n        this.canvasElement = $(\"#myCanvas\");\n\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: <HTMLCanvasElement>this.canvasElement.get(0),\n            antialias: true,\n            precision: \"highp\"\n        });\n        this.renderer.autoClear = false;\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.type = PCFSoftShadowMap;\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n\n        this.camera = new THREE.PerspectiveCamera(\n            VIEW_ANGLE,\n            window.innerWidth / window.innerHeight,\n            NEAR,\n            FAR);\n\n        this.scene = new THREE.Scene();\n\n        let light = new THREE.PointLight(0xFFFFFF, 0.5, 30);\n        light.position.set(0, 0, 0);\n        this.scene.add(light);\n\n        this.scene.add(new THREE.AmbientLight(0x404040));\n\n        this.glowScene = new THREE.Scene();\n        this.glowScene.add(new THREE.AmbientLight(0xFFFFFF));\n\n        let dirLight = new THREE.PointLight(0xffffff, 1);\n        this.camera.add(dirLight);\n        this.glowScene.add(dirLight);\n    }\n\n\n\n    render = () => {\n        requestAnimationFrame(this.render);\n\n\n    };\n}\nlet main: Main = new Main();\nmain.render();"]}